<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpVectors.Runtime.Wpf</name>
    </assembly>
    <members>
        <member name="T:SharpVectors.Runtime.DpiScale">
            <summary>
            Stores DPI information from which a <see cref="T:System.Windows.Media.Visual"/> 
            or <see cref="T:System.Windows.UIElement"/> is rendered.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.#ctor">
            <summary>
            Initializes a new instance of the DpiScale class.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the DpiScale class.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the DpiScale class.
            </summary>
            <param name="dpiScaleX">DPI scale on X-axis</param>
            <param name="dpiScaleY">DPI scale on Y-axis</param>         
        </member>
        <member name="P:SharpVectors.Runtime.DpiScale.DpiScaleX">
            <summary>
            Gets the DPI scale on the X axis.When DPI is 96, <see cref="P:SharpVectors.Runtime.DpiScale.DpiScaleX"/> is 1. 
            </summary>
            <remarks>
            On Windows Desktop, this value is the same as <see cref="P:SharpVectors.Runtime.DpiScale.DpiScaleY"/>
            </remarks>
        </member>
        <member name="P:SharpVectors.Runtime.DpiScale.DpiScaleY">
            <summary>
            Gets the DPI scale on the Y axis. When DPI is 96, <see cref="P:SharpVectors.Runtime.DpiScale.DpiScaleY"/> is 1. 
            </summary>
            <remarks>
            On Windows Desktop, this value is the same as <see cref="P:SharpVectors.Runtime.DpiScale.DpiScaleX"/>
            </remarks>
        </member>
        <member name="P:SharpVectors.Runtime.DpiScale.PixelsPerDip">
            <summary>
            Get or sets the PixelsPerDip at which the text should be rendered.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.DpiScale.PixelsPerInchX">
            <summary>
            Gets the PPI along X axis.
            </summary>
            <remarks>
            On Windows Desktop, this value is the same as <see cref="P:SharpVectors.Runtime.DpiScale.PixelsPerInchY"/>
            </remarks>
        </member>
        <member name="P:SharpVectors.Runtime.DpiScale.PixelsPerInchY">
            <summary>
            Gets the PPI along Y axis.
            </summary>
            <remarks>
            On Windows Desktop, this value is the same as <see cref="P:SharpVectors.Runtime.DpiScale.PixelsPerInchX"/>
            </remarks>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.Equals(System.Object)">
            <summary>
            Equality test
            </summary>
            <param name="obj">The object being compared against</param>
            <returns>True if the objects are equal, False otherwise</returns>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.GetHashCode">
            <summary>
            Returns the hash code of the current object
            </summary>
            <returns>The hash code of the object</returns>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.Equals(SharpVectors.Runtime.DpiScale)">
             <summary>
             Equality test against a <see cref="T:SharpVectors.Runtime.DpiScale"/> object.
             </summary>
             <param name="dpiScale2">The object being compared against</param>
             <returns>True if the objects are equal, False otherwise</returns>
             <remarks>
             Two DPI scale values are equal if they are equal after rounding up
             to hundredths place.
            
             Common PPI values in use are:
             <list type="table">
             <listheader><term>PPI</term><term>DPI(%)</term><term>DPI(Ratio)</term></listheader>
             <item><term>96</term><term>100%</term><term>1.00</term></item>
             <item><term>120</term><term>125%</term><term>1.25</term></item>
             <item><term>144</term><term>150%</term><term>1.50</term></item>
             <item><term>192</term><term>200%</term><term>2.00</term></item>
             </list>
             </remarks>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.op_Inequality(SharpVectors.Runtime.DpiScale,SharpVectors.Runtime.DpiScale)">
            <summary>
            Checks to inequality between two <see cref="T:SharpVectors.Runtime.DpiScale"/> instances.
            </summary>
            <param name="dpiScaleA">The first object being compared</param>
            <param name="dpiScaleB">The second object being compared</param>
            <returns>True if the objects are not equal, otherwise False</returns>
        </member>
        <member name="M:SharpVectors.Runtime.DpiScale.op_Equality(SharpVectors.Runtime.DpiScale,SharpVectors.Runtime.DpiScale)">
            <summary>
            Checks for equality between two <see cref="T:SharpVectors.Runtime.DpiScale"/> instances.
            </summary>
            <param name="dpiScaleA">The first object being compared</param>
            <param name="dpiScaleB">The second object being compared</param>
            <returns>True if the two objects are equal, otherwise False</returns>
        </member>
        <member name="F:SharpVectors.Runtime.DpiUtilities.DefaultPixelsPerInch">
            <summary>
            This is the default PPI value used in WPF and Windows.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetWindowScale(System.Windows.Window)">
            <summary>
            Gets the window (monitor) scale versus System DPI.
            </summary>
            <param name="window">The window.</param>
            <returns></returns>
            <remarks>
            <para>When developing a DPI-aware application, this is useful for applying a ScaleTransform
            to your window so all fonts and graphics are scaled and rendered beautifully based on the
            physical capabilities of the display and the accessibility settings of the user.</para>
            </remarks>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetWindowScale(System.Windows.Media.Visual)">
            <summary>
            Gets the window (monitor) scale versus System DPI.
            </summary>
            <param name="visual">The window.</param>
            <returns></returns>
            <remarks>
            <para>When developing a DPI-aware application, this is useful for applying a ScaleTransform
            to your window so all fonts and graphics are scaled and rendered beautifully based on the
            physical capabilities of the display and the accessibility settings of the user.</para>
            </remarks>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetWindowScale(System.IntPtr)">
            <summary>
            Gets the window (monitor) scale versus System DPI.
            </summary>
            <param name="hwnd">The window.</param>
            <returns></returns>
            <remarks>
            <para>When developing a DPI-aware application, this is useful for applying a ScaleTransform
            to your window so all fonts and graphics are scaled and rendered beautifully based on the
            physical capabilities of the display and the accessibility settings of the user.</para>
            </remarks>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetVirtualPixelScale(System.Windows.Window)">
            <summary>
            Gets the virtual pixel scale for a window. This is essentially
            the Effective DPI of the monitor versus a standard 96 DPI.
            </summary>
            <param name="window">The window.</param>
            <returns></returns>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetVirtualPixelScale(System.IntPtr)">
            <summary>
            Gets the virtual pixel scale for a window. This is essentially
            the Effective DPI of the monitor versus a standard 96 DPI.
            </summary>
            <param name="hwnd">The HWND.</param>
            <returns></returns>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetVirtualPixelScaleByMonitor(System.IntPtr)">
            <summary>
            Gets the virtual pixel scale for a monitor. This is essentially
            the Effective DPI of the monitor versus a standard 96 DPI.
            </summary>
            <param name="hMonitor">The h monitor.</param>
            <returns></returns>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetMonitorEffectiveDpi(System.IntPtr,System.UInt32@,System.UInt32@)">
            <summary>
            Get the Effective DPI of a monitor after a user's accessibility
            preferences have been applied.
            </summary>
            <param name="hMonitor">The monitor.</param>
            <param name="dpiX">The dpi x.</param>
            <param name="dpiY">The dpi y.</param>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetSystemEffectiveDpi(System.UInt32@,System.UInt32@)">
            <summary>
            Get the System Effective DPI.
            </summary>
            <remarks>
            <para>The System Effective DPI is derived by the operating system
            by looking across all monitors and determining an "Effective DPI" that works
            well across all the screens for applications that do not support
             per-monitor DPI.</para>
            </remarks>
            <param name="dpiX">The dpi x.</param>
            <param name="dpiY">The dpi y.</param>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetWindowEffectiveDpi(System.Windows.Window,System.UInt32@,System.UInt32@)">
            <summary>
            Get the Effective DPI of a windows (monitor) after a user's accessibility
            preferences have been applied.
            </summary>
            <param name="window">The window.</param>
            <param name="dpiX">The dpi x.</param>
            <param name="dpiY">The dpi y.</param>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetWindowEffectiveDpi(System.IntPtr,System.UInt32@,System.UInt32@)">
            <summary>
            Get the Effective DPI of a windows (monitor) after a user's accessibility
            preferences have been applied.
            </summary>
            <param name="hwnd">The window.</param>
            <param name="dpiX">The dpi x.</param>
            <param name="dpiY">The dpi y.</param>
        </member>
        <member name="M:SharpVectors.Runtime.DpiUtilities.GetScreenScalingFactor(System.String)">
            <summary>
            Gets scaling factor for a monitor
            This is defined as current pixel size relative to effective DPI
            </summary>
            <param name="deviceName">Monitor device name or null for the primary monitor</param>
            <returns></returns>
        </member>
        <member name="M:SharpVectors.Runtime.EmbeddedBitmapSource.BeginInit">
            <summary>
            Call BeginInit every time the WICSourceHandle is going to be change.
            again this methods is not exposed and reflection is needed.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.EmbeddedBitmapSource.EndInit">
            <summary>
            Call EndInit after the WICSourceHandle was changed and after using BeginInit.
            again this methods is not exposed and reflection is needed.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.EmbeddedBitmapSource.InitWicInfo(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Set the WicSourceHandle property with the source associated with this class.
            again this methods is not exposed and reflection is needed.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:SharpVectors.Runtime.EmbeddedBitmapSource.EnsureStream">
            <summary>
            In the designer Data is not set. To prevent exceptions when displaying in the Designer, add a dummy bitmap.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point of coordinates (x,y).
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.RECT.Empty">
            <summary> Win32 </summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Win32 </summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.RECT.#ctor(SharpVectors.Runtime.NativeMethods.RECT)">
            <summary> Win32 </summary>
        </member>
        <member name="P:SharpVectors.Runtime.NativeMethods.RECT.IsEmpty">
            <summary> Win32 </summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.RECT.ToString">
            <summary> Return a user friendly representation of this struct </summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.RECT.Equals(System.Object)">
            <summary> Determine if 2 RECT are equal (deep compare) </summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.RECT.GetHashCode">
            <summary>Return the HashCode for this struct (not garanteed to be unique)</summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.RECT.op_Equality(SharpVectors.Runtime.NativeMethods.RECT,SharpVectors.Runtime.NativeMethods.RECT)">
            <summary> Determine if 2 RECT are equal (deep compare)</summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.RECT.op_Inequality(SharpVectors.Runtime.NativeMethods.RECT,SharpVectors.Runtime.NativeMethods.RECT)">
            <summary> Determine if 2 RECT are different(deep compare)</summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.GaFlags.GA_PARENT">
            <summary>
            Retrieves the parent window. This does not include the owner, as it does with the GetParent function.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.GaFlags.GA_ROOT">
            <summary>
            Retrieves the root window by walking the chain of parent windows.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.GaFlags.GA_ROOTOWNER">
            <summary>
            Retrieves the owned root window by walking the chain of parent and owner windows returned by GetParent.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.GwlIndex.GWL_STYLE">
            <summary>
            Gets/sets the window styles.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.GwlIndex.GWL_EXSTYLE">
            <summary>
            Gets/sets the extended window styles.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.NativeMethods.GetWindowLongPtr(System.IntPtr,SharpVectors.Runtime.NativeMethods.GwlIndex)">
            <summary>
            Handles 32/64 bit differences
            </summary>
        </member>
        <member name="T:SharpVectors.Runtime.NativeMethods.TokenInformationClass">
            <summary>
            Passed to <see cref="M:SharpVectors.Runtime.NativeMethods.GetTokenInformation(System.IntPtr,SharpVectors.Runtime.NativeMethods.TokenInformationClass,System.IntPtr,System.UInt32,System.UInt32@)"/> to specify what information about the token to return.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.DRIVERVERSION">
            <summary>
            Device driver version
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.TECHNOLOGY">
            <summary>
            Device classification
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.HORZSIZE">
            <summary>
            Horizontal size in millimeters
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.VERTSIZE">
            <summary>
            Vertical size in millimeters
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.HORZRES">
            <summary>
            Horizontal width in pixels
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.VERTRES">
            <summary>
            Vertical height in pixels
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.BITSPIXEL">
            <summary>
            Number of bits per pixel
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.NUMBRUSHES">
            <summary>
            Number of brushes the device has
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.NUMPENS">
            <summary>
            Number of pens the device has
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.NUMMARKERS">
            <summary>
            Number of markers the device has
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.NUMFONTS">
            <summary>
            Number of fonts the device has
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.NUMCOLORS">
            <summary>
            Number of colors the device supports
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.PDEVICESIZE">
            <summary>
            Size required for device descriptor
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.CURVECAPS">
            <summary>
            Curve capabilities
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.LINECAPS">
            <summary>
            Line capabilities
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.POLYGONALCAPS">
            <summary>
            Polygonal capabilities
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.TEXTCAPS">
            <summary>
            Text capabilities
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.CLIPCAPS">
            <summary>
            Clipping capabilities
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.RASTERCAPS">
            <summary>
            Bitblt capabilities
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.ASPECTX">
            <summary>
            Length of the X leg
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.ASPECTY">
            <summary>
            Length of the Y leg
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.ASPECTXY">
            <summary>
            Length of the hypotenuse
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.SHADEBLENDCAPS">
            <summary>
            Shading and Blending caps
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.SIZEPALETTE">
            <summary>
            Number of entries in physical palette
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.NUMRESERVED">
            <summary>
            Number of reserved entries in palette
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.COLORRES">
            <summary>
            Actual color resolution
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.PHYSICALWIDTH">
            <summary>
            Physical Width in device units
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.PHYSICALHEIGHT">
            <summary>
            Physical Height in device units
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.PHYSICALOFFSETX">
            <summary>
            Physical Printable Area x margin
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.PHYSICALOFFSETY">
            <summary>
            Physical Printable Area y margin
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.SCALINGFACTORX">
            <summary>
            Scaling factor x
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.SCALINGFACTORY">
            <summary>
            Scaling factor y
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.VREFRESH">
            <summary>
            Current vertical refresh rate of the display device (for displays only) in Hz
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.DESKTOPVERTRES">
            <summary>
            Vertical height of entire desktop in pixels
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.DESKTOPHORZRES">
            <summary>
            Horizontal width of entire desktop in pixels
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.NativeMethods.DeviceCap.BLTALIGNMENT">
            <summary>
            Preferred blt alignment
            </summary>
        </member>
        <member name="T:SharpVectors.Runtime.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:SharpVectors.Runtime.SvgAnimationLayer">
            <summary>
            This creates a host for visuals derived from the <see cref="T:System.Windows.Controls.Canvas"/> class.
            </summary>
            <remarks>
            This class provides layout, event handling, and container support for the 
            child visual objects.
            </remarks>
        </member>
        <member name="T:SharpVectors.Runtime.SvgAnimator">
            <summary>
            This provides a wrapper for the Scoreboard, which is used for opacity animation.
            </summary>
        </member>
        <member name="T:SharpVectors.Runtime.SvgDrawingCanvas">
            <summary>
            This is the main drawing canvas for the rendered SVG diagrams.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.SvgDrawingCanvas.AppTitle">
            <summary>
            Gets or sets the application title, which is used to display the alert and error messages not handled
            by the user.
            </summary>
            <value>A string containg the application title. This cannot be <see langword="null"/> or empty. 
            The default is <c>SharpVectors</c>.</value>
        </member>
        <member name="P:SharpVectors.Runtime.SvgDrawingCanvas.DesignMode">
            <summary>
            Gets a value specifying whether the viewer control is in design-mode.
            </summary>
            <value>
            This is <see langword="true"/> if the viewer control is in design-mode, otherwise; it is <see langword="false"/>.
            </value>
        </member>
        <member name="P:SharpVectors.Runtime.SvgDrawingCanvas.InteractiveMode">
            <summary>
            Gets or sets a value specifying the interactive mode, which controls the level of information attached
            to the generated drawing.
            </summary>
            <value>An enumeration of the type <see cref="T:SharpVectors.Runtime.SvgInteractiveModes"/> specifying the interactive mode.
            The default is <see cref="F:SharpVectors.Runtime.SvgInteractiveModes.None"/>; no interactivity and may change in the future.</value>
        </member>
        <member name="T:SharpVectors.Runtime.SvgImageNameScope">
            <summary>
            This class, if placed at the root of a XAML file which is loaded by XamlReader.Load()
            will end up having all named elements contained in its nameTable automatically.
            If you want to get that list, it is now in your power.
            </summary>
            <remarks>
            This class is based on the discussion, which can be found here
            <see href="http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/5c226430-c54d-45b8-a8a2-7e4a79e3692a"/>
            </remarks>
        </member>
        <member name="T:SharpVectors.Runtime.SvgInteractiveModes">
            <summary>
            <para>
            A value specifying the type of interactivity to be supported by the conversion process
            and controls.
            </para>
            <para>
            In the conversion process, more information are added to make the interactivity 
            defined possible, and might be unnecessary overhead where no interactivity is needed.
            </para>
            <para>
            In the rendering process at the control level, keyboard and mouse operations are monitored
            to support interactivities.
            </para>
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.SvgInteractiveModes.None">
            <summary>
            A value specifying no interactivity.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.SvgInteractiveModes.Standard">
            <summary>
            A value specifying the default or standard interactivity per the SVG specifications.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.SvgInteractiveModes.Advanced">
            <summary>
            A value specifying extra or custom interactivity features.
            </summary>
        </member>
        <member name="T:SharpVectors.Runtime.ZoomPanAnimationHelper">
            <summary>
            A helper class to simplify animation.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanAnimationHelper.StartAnimation(System.Windows.UIElement,System.Windows.DependencyProperty,System.Double,System.Double,System.Boolean)">
            <summary>
            Starts an animation to a particular value on the specified dependency property.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanAnimationHelper.StartAnimation(System.Windows.UIElement,System.Windows.DependencyProperty,System.Double,System.Double,System.EventHandler,System.Boolean)">
            <summary>
            Starts an animation to a particular value on the specified dependency property.
            You can pass in an event handler to call when the animation has completed.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanAnimationHelper.StartAnimation(System.Windows.UIElement,System.Windows.DependencyProperty,System.Double,System.Double)">
            <summary>
            Starts an animation to a particular value on the specified dependency property.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanAnimationHelper.StartAnimation(System.Windows.UIElement,System.Windows.DependencyProperty,System.Double,System.Double,System.EventHandler)">
            <summary>
            Starts an animation to a particular value on the specified dependency property.
            You can pass in an event handler to call when the animation has completed.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanAnimationHelper.CancelAnimation(System.Windows.UIElement,System.Windows.DependencyProperty)">
            <summary>
            Cancel any animations that are running on the specified dependency property.
            </summary>
        </member>
        <member name="T:SharpVectors.Runtime.ZoomPanControl">
            <summary>
            A class that wraps up zooming and panning of it's content.
            </summary>
            <summary>
            This is an extension to the ZoomPanControl class that implements
            the IScrollInfo interface properties and functions.
            
            IScrollInfo is implemented to allow ZoomPanControl to be wrapped (in XAML)
            in a ScrollViewer. IScrollInfo allows the ScrollViewer and ZoomPanControl to 
            communicate important information such as the horizontal and vertical scrollbar offsets.
            
            There is a good series of articles showing how to implement IScrollInfo starting here:
                http://blogs.msdn.com/bencon/archive/2006/01/05/509991.aspx     
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._content">
            <summary>
            Reference to the underlying content, which is named PART_Content in the template.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._contentScaleTransform">
            <summary>
            The transform that is applied to the content to scale it by 'ContentScale'.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._contentOffsetTransform">
            <summary>
            The transform that is applied to the content to offset it by 'ContentOffsetX' and 'ContentOffsetY'.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._enableContentOffsetUpdateFromScale">
            <summary>
            Enable the update of the content offset as the content scale changes.
            This enabled for zooming about a point (Google-maps style zooming) and zooming to a rect.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._disableScrollOffsetSync">
            <summary>
            Used to disable synchronization between IScrollInfo interface and ContentOffsetX/ContentOffsetY.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._disableContentFocusSync">
            <summary>
            Normally when content offsets changes the content focus is automatically updated.
            This synchronization is disabled when 'disableContentFocusSync' is set to 'true'.
            When we are zooming in or out we 'disableContentFocusSync' is set to 'true' because 
            we are zooming in or out relative to the content focus we don't want to update the focus.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._constrainedContentViewportWidth">
            <summary>
            The width of the viewport in content coordinates, clamped to the width of the content.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._constrainedContentViewportHeight">
            <summary>
            The height of the viewport in content coordinates, clamped to the height of the content.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._canVerticallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._canHorizontallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._unScaledExtent">
            <summary>
            Records the unscaled extent of the content.
            This is calculated during the measure and arrange.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._viewport">
            <summary>
            Records the size of the viewport (in viewport coordinates) onto the content.
            This is calculated during the measure and arrange.
            </summary>
        </member>
        <member name="F:SharpVectors.Runtime.ZoomPanControl._scrollOwner">
            <summary>
            Reference to the ScrollViewer that is wrapped (in XAML) around the ZoomPanControl.
            Or set to null if there is no ScrollViewer.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.#cctor">
            <summary>
            Static constructor to define metadata for the control (and link it to the style in Generic.xaml).
            </summary>
        </member>
        <member name="E:SharpVectors.Runtime.ZoomPanControl.ContentOffsetXChanged">
            <summary>
            Event raised when the ContentOffsetX property has changed.
            </summary>
        </member>
        <member name="E:SharpVectors.Runtime.ZoomPanControl.ContentOffsetYChanged">
            <summary>
            Event raised when the ContentOffsetY property has changed.
            </summary>
        </member>
        <member name="E:SharpVectors.Runtime.ZoomPanControl.ContentScaleChanged">
            <summary>
            Event raised when the ContentScale property has changed.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ContentOffsetX">
            <summary>
            Get/set the X offset (in content coordinates) of the view on the content.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ContentOffsetY">
            <summary>
            Get/set the Y offset (in content coordinates) of the view on the content.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ContentScale">
            <summary>
            Get/set the current scale (or zoom factor) of the content.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.MinContentScale">
            <summary>
            Get/set the minimum value for 'ContentScale'.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.MaxContentScale">
            <summary>
            Get/set the maximum value for 'ContentScale'.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusX">
            <summary>
            The X coordinate of the content focus, this is the point that we are focusing on when zooming.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ContentZoomFocusY">
            <summary>
            The Y coordinate of the content focus, this is the point that we are focusing on when zooming.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusX">
            <summary>
            The X coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) 
            that the content focus point is locked to while zooming in.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ViewportZoomFocusY">
            <summary>
            The Y coordinate of the viewport focus, this is the point in the viewport (in viewport coordinates) 
            that the content focus point is locked to while zooming in.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.AnimationDuration">
            <summary>
            The duration of the animations (in seconds) started by calling AnimatedZoomTo and the other animation methods.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ContentViewportWidth">
            <summary>
            Get the viewport width, in content coordinates.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ContentViewportHeight">
            <summary>
            Get the viewport height, in content coordinates.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.IsMouseWheelScrollingEnabled">
            <summary>
            Set to 'true' to enable the mouse wheel to scroll the zoom and pan control.
            This is set to 'false' by default.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.AnimatedZoomTo(System.Double,System.Windows.Rect)">
            <summary>
            Do an animated zoom to view a specific scale and rectangle (in content coordinates).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.AnimatedZoomTo(System.Windows.Rect)">
            <summary>
            Do an animated zoom to the specified rectangle (in content coordinates).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ZoomTo(System.Windows.Rect)">
            <summary>
            Instantly zoom to the specified rectangle (in content coordinates).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.SnapContentOffsetTo(System.Windows.Point)">
            <summary>
            Instantly center the view on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.SnapTo(System.Windows.Point)">
            <summary>
            Instantly center the view on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.AnimatedSnapTo(System.Windows.Point)">
            <summary>
            Use animation to center the view on the specified point (in content coordinates).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.AnimatedZoomAboutPoint(System.Double,System.Windows.Point)">
            <summary>
            Zoom in/out centered on the specified point (in content coordinates).
            The focus point is kept locked to it's on screen position (ala google maps).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ZoomAboutPoint(System.Double,System.Windows.Point)">
            <summary>
            Zoom in/out centered on the specified point (in content coordinates).
            The focus point is kept locked to it's on screen position (ala google maps).
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.AnimatedZoomTo(System.Double)">
            <summary>
            Zoom in/out centered on the viewport center.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ZoomTo(System.Double)">
            <summary>
            Zoom in/out centered on the viewport center.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.AnimatedScaleToFit">
            <summary>
            Do animation that scales the content so that it fits completely in the control.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ScaleToFit">
            <summary>
            Instantly scale the content so that it fits completely in the control.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.OnApplyTemplate">
            <summary>
            Called when a template has been applied to the control.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Measure the control and it's children.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arrange the control and it's children.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.AnimatedZoomPointToViewportCenter(System.Double,System.Windows.Point,System.EventHandler)">
            <summary>
            Zoom to the specified scale and move the specified focus point to the center of the viewport.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ZoomPointToViewportCenter(System.Double,System.Windows.Point)">
            <summary>
            Zoom to the specified scale and move the specified focus point to the center of the viewport.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ContentScale_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised when the 'ContentScale' property has changed value.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ContentScale_Coerce(System.Windows.DependencyObject,System.Object)">
            <summary>
            Method called to clamp the 'ContentScale' value to its valid range.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.MinOrMaxContentScale_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised 'MinContentScale' or 'MaxContentScale' has changed.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ContentOffsetX_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised when the 'ContentOffsetX' property has changed value.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ContentOffsetX_Coerce(System.Windows.DependencyObject,System.Object)">
            <summary>
            Method called to clamp the 'ContentOffsetX' value to its valid range.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ContentOffsetY_PropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Event raised when the 'ContentOffsetY' property has changed value.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ContentOffsetY_Coerce(System.Windows.DependencyObject,System.Object)">
            <summary>
            Method called to clamp the 'ContentOffsetY' value to its valid range.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.ResetViewportZoomFocus">
            <summary>
            Reset the viewport zoom focus to the center of the viewport.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.UpdateViewportSize(System.Windows.Size)">
            <summary>
            Update the viewport size from the specified size.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.UpdateContentViewportSize">
            <summary>
            Update the size of the viewport in content coordinates after the viewport size or 'ContentScale' has changed.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.UpdateTranslationX">
            <summary>
            Update the X coordinate of the translation transformation.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.UpdateTranslationY">
            <summary>
            Update the Y coordinate of the translation transformation.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.UpdateContentZoomFocusX">
            <summary>
            Update the X coordinate of the zoom focus point in content coordinates.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.UpdateContentZoomFocusY">
            <summary>
            Update the Y coordinate of the zoom focus point in content coordinates.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.CanVerticallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.CanHorizontallyScroll">
            <summary>
            Set to 'true' when the vertical scrollbar is enabled.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ExtentWidth">
            <summary>
            The width of the content (with 'ContentScale' applied).
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ExtentHeight">
            <summary>
            The height of the content (with 'ContentScale' applied).
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ViewportWidth">
            <summary>
            Get the width of the viewport onto the content.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ViewportHeight">
            <summary>
            Get the height of the viewport onto the content.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.ScrollOwner">
            <summary>
            Reference to the ScrollViewer that is wrapped (in XAML) around the ZoomPanControl.
            Or set to null if there is no ScrollViewer.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.HorizontalOffset">
            <summary>
            The offset of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:SharpVectors.Runtime.ZoomPanControl.VerticalOffset">
            <summary>
            The offset of the vertical scrollbar.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.SetHorizontalOffset(System.Double)">
            <summary>
            Called when the offset of the horizontal scrollbar has been set.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.SetVerticalOffset(System.Double)">
            <summary>
            Called when the offset of the vertical scrollbar has been set.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.LineUp">
            <summary>
            Shift the content offset one line up.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.LineDown">
            <summary>
            Shift the content offset one line down.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.LineLeft">
            <summary>
            Shift the content offset one line left.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.LineRight">
            <summary>
            Shift the content offset one line right.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.PageUp">
            <summary>
            Shift the content offset one page up.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.PageDown">
            <summary>
            Shift the content offset one page down.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.PageLeft">
            <summary>
            Shift the content offset one page left.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.PageRight">
            <summary>
            Shift the content offset one page right.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.MouseWheelDown">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.MouseWheelLeft">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.MouseWheelRight">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.MouseWheelUp">
            <summary>
            Don't handle mouse wheel input from the ScrollViewer, the mouse wheel is
            used for zooming in and out, not for manipulating the scrollbars.
            </summary>
        </member>
        <member name="M:SharpVectors.Runtime.ZoomPanControl.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
            <summary>
            Bring the specified rectangle to view.
            </summary>
        </member>
    </members>
</doc>
